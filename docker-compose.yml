services:
  backend:
    build: ./backend
    restart: always
    ports:
      - "80:80"
    volumes:
      - frontendDist:/home/work/frontend
      - ./dockerdata/images:/home/work/images
    environment:
      DBADDRESS: postgres://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}
      OAUTHALLOWDOMAIN: ${OAUTH_ALLOWED_EMAIL_DOMAIN}
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully

  db:
    image: "postgres:16.4-alpine3.20"
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./dockerdata/dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  frontend:
    build: ./frontend
    volumes:
      - frontendDist:/home/work/dist

volumes:
  frontendDist:
